{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raul-\\\\MIT\\\\contest_checker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'react';\nlet name = \"Raul Alcantara\";\nlet answers = [\"A\", \"B\", \"\", \"B\", \"A\"];\nlet correct_answer = [\"A\", \"C\", \"D\", \"B\", \"D\"];\nlet correct_answer_score = 10;\nlet incorrect_answer_score = -2;\nlet blank_answer_score = 0;\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  get_scores(answers) {\n    let result = [];\n\n    for (let i = 0; i < answers.length; i++) {\n      result.push(__jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Answer for problem \", i + 1, \" was \", answers[i]));\n    }\n\n    return result;\n  }\n\n  get_question_score(answer, correct_answer) {\n    if (answer == correct_answer) {\n      return correct_answer_score;\n    } else if (answer == \"\") {\n      return blank_answer_score;\n    } else {\n      return incorrect_answer_score;\n    }\n  }\n\n  get_total_score(answers) {\n    let score = 0;\n\n    for (let i = 0; i < answers.length; i++) {\n      let add_score = get_question_score(answers[i], correct_answer[i]);\n      score += add_score;\n    }\n\n    return score;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name is \", name), get_scores(answers)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" The score is \", get_total_score(answers)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/raul-/MIT/contest_checker/pages/index.js"],"names":["name","answers","correct_answer","correct_answer_score","incorrect_answer_score","blank_answer_score","Index","React","Component","constructor","props","get_scores","result","i","length","push","get_question_score","answer","get_total_score","score","add_score","render"],"mappings":";;;AAAA,OAAO,OAAP;AACA,IAAIA,IAAI,GAAG,gBAAX;AACA,IAAIC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,GAAf,EAAoB,GAApB,CAAd;AACA,IAAIC,cAAc,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAArB;AACA,IAAIC,oBAAoB,GAAG,EAA3B;AACA,IAAIC,sBAAsB,GAAG,CAAC,CAA9B;AACA,IAAIC,kBAAkB,GAAG,CAAzB;AAEA,eAAe,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,UAAU,CAACV,OAAD,EAAS;AACf,QAAIW,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEZ,OAAO,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnCD,MAAAA,MAAM,CAACG,IAAP,CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBF,CAAC,GAAC,CAA1B,WAAkCZ,OAAO,CAACY,CAAD,CAAzC,CAAZ;AACH;;AACD,WAAOD,MAAP;AACH;;AACDI,EAAAA,kBAAkB,CAACC,MAAD,EAASf,cAAT,EAAwB;AACtC,QAAIe,MAAM,IAAIf,cAAd,EAA6B;AAEzB,aAAOC,oBAAP;AAEH,KAJD,MAIQ,IAAIc,MAAM,IAAI,EAAd,EAAiB;AAErB,aAAOZ,kBAAP;AAEH,KAJO,MAID;AAEH,aAAOD,sBAAP;AACH;AACJ;;AACDc,EAAAA,eAAe,CAACjB,OAAD,EAAS;AACpB,QAAIkB,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,OAAO,CAACa,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,UAAIO,SAAS,GAAGJ,kBAAkB,CAACf,OAAO,CAACY,CAAD,CAAR,EAAaX,cAAc,CAACW,CAAD,CAA3B,CAAlC;AACAM,MAAAA,KAAK,IAAIC,SAAT;AACH;;AACD,WAAOD,KAAP;AACH;;AACDE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAarB,IAAb,CADJ,EAEKW,UAAU,CAACV,OAAD,CAFf,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBiB,eAAe,CAACjB,OAAD,CAAjC,CALJ,CADJ;AAUH;;AA5C6C","sourcesContent":["import 'react'\r\nlet name = \"Raul Alcantara\";\r\nlet answers = [\"A\", \"B\", \"\", \"B\", \"A\"];\r\nlet correct_answer = [\"A\", \"C\", \"D\", \"B\", \"D\"];\r\nlet correct_answer_score = 10;\r\nlet incorrect_answer_score = -2;\r\nlet blank_answer_score = 0;\r\n\r\nexport default class Index extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    get_scores(answers){\r\n        let result = []\r\n        for (let i = 0; i< answers.length; i++){\r\n            result.push(<li>Answer for problem {i+1} was {answers[i]}</li>);\r\n        }\r\n        return result;\r\n    }\r\n    get_question_score(answer, correct_answer){\r\n        if (answer == correct_answer){\r\n\r\n            return correct_answer_score;\r\n\r\n        } else  if (answer == \"\"){\r\n\r\n            return blank_answer_score;\r\n\r\n        } else {\r\n\r\n            return incorrect_answer_score;\r\n        }\r\n    }\r\n    get_total_score(answers){\r\n        let score = 0;\r\n        for (let i = 0; i < answers.length; i++){\r\n            let add_score = get_question_score(answers[i], correct_answer[i]);\r\n            score += add_score;\r\n        }\r\n        return score\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ol>\r\n                    <li>Name is {name}</li>\r\n                    {get_scores(answers)}\r\n                </ol>\r\n                <p> The score is {get_total_score(answers)}</p>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raul-\\\\MIT\\\\contest_checker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import 'react'\nimport Student_box from '../static/student_box';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.correct_answer = [\"A\", \"C\", \"D\", \"B\", \"D\"], this.state = {\n      answers: new Map()\n    };\n    this.add_info = this.add_info.bind(this);\n    this.generate_students = this.generate_students.bind(this);\n  }\n\n  componentDidMount() {\n    this.add_info(\"Raul\", [\"A\", \"C\", \"\", \"B\", \"A\"]);\n    this.add_info(\"Angie\", [\"B\", \"C\", \"D\", \"B\", \"A\"]);\n  }\n\n  componentWillMount() {\n    this.add_info(\"Raul\", [\"A\", \"C\", \"\", \"B\", \"A\"]);\n    this.add_info(\"Angie\", [\"B\", \"C\", \"D\", \"B\", \"A\"]);\n  }\n\n  generate_students() {\n    let result = [];\n    console.log(this.state.answers);\n\n    for (let student of this.state.answers) {\n      console.log(student);\n\n      let student_component = __jsx(Student_box, {\n        name: student,\n        answers: this.state.answers[student],\n        correct_answer: this.correct_answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n\n      console.log(student_component);\n      result.push(student_component);\n    }\n\n    ;\n    return result;\n  }\n\n  add_info(name, answers) {\n    let answer_so_far = this.state.answers;\n    answer_so_far[name] = answers;\n    this.setState({\n      answers: answer_so_far\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.generate_students());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/raul-/MIT/contest_checker/pages/index.js"],"names":["Student_box","Index","React","Component","constructor","props","correct_answer","state","answers","Map","add_info","bind","generate_students","componentDidMount","componentWillMount","result","console","log","student","student_component","push","name","answer_so_far","setState","render"],"mappings":";;;AAAA;AAEA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA,eAAe,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAtB,EAEA,KAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IAAIC,GAAJ;AADA,KAFb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDE,EAAAA,iBAAiB,GAAE;AACf,SAAKH,QAAL,CAAc,MAAd,EAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,GAAf,EAAoB,GAApB,CAAtB;AACA,SAAKA,QAAL,CAAc,OAAd,EAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;AACH;;AACDI,EAAAA,kBAAkB,GAAE;AAChB,SAAKJ,QAAL,CAAc,MAAd,EAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,GAAf,EAAoB,GAApB,CAAtB;AACA,SAAKA,QAAL,CAAc,OAAd,EAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;AACH;;AACDE,EAAAA,iBAAiB,GAAE;AACf,QAAIG,MAAM,GAAG,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,OAAvB;;AACA,SAAK,IAAIU,OAAT,IAAoB,KAAKX,KAAL,CAAWC,OAA/B,EAAwC;AACpCQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,UAAIC,iBAAiB,GAAG,MAAC,WAAD;AACI,QAAA,IAAI,EAAID,OADZ;AAEI,QAAA,OAAO,EAAI,KAAKX,KAAL,CAAWC,OAAX,CAAmBU,OAAnB,CAFf;AAGI,QAAA,cAAc,EAAG,KAAKZ,cAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;AAKAU,MAAAA,OAAO,CAACC,GAAR,CAAYE,iBAAZ;AACAJ,MAAAA,MAAM,CAACK,IAAP,CAAYD,iBAAZ;AACH;;AAAA;AAED,WAAOJ,MAAP;AACH;;AACDL,EAAAA,QAAQ,CAACW,IAAD,EAAOb,OAAP,EAAe;AACnB,QAAIc,aAAa,GAAG,KAAKf,KAAL,CAAWC,OAA/B;AACAc,IAAAA,aAAa,CAACD,IAAD,CAAb,GAAsBb,OAAtB;AACA,SAAKe,QAAL,CAAc;AACVf,MAAAA,OAAO,EAAEc;AADC,KAAd;AAGH;;AACDE,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,iBAAL,EADL,CADJ;AAMH;;AAlD6C","sourcesContent":["//import 'react'\r\n\r\nimport Student_box from '../static/student_box'\r\n\r\nexport default class Index extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.correct_answer = [\"A\", \"C\", \"D\", \"B\", \"D\"],\r\n\r\n        this.state = {\r\n            answers: new Map(),\r\n        }\r\n        this.add_info = this.add_info.bind(this);\r\n        this.generate_students = this.generate_students.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.add_info(\"Raul\", [\"A\", \"C\", \"\", \"B\", \"A\"]);\r\n        this.add_info(\"Angie\", [\"B\", \"C\", \"D\", \"B\", \"A\"]);\r\n    }\r\n    componentWillMount(){\r\n        this.add_info(\"Raul\", [\"A\", \"C\", \"\", \"B\", \"A\"]);\r\n        this.add_info(\"Angie\", [\"B\", \"C\", \"D\", \"B\", \"A\"]);\r\n    }\r\n    generate_students(){\r\n        let result = [];\r\n        console.log(this.state.answers)\r\n        for (let student of this.state.answers) {\r\n            console.log(student);\r\n            let student_component = <Student_box\r\n                                        name = {student}\r\n                                        answers = {this.state.answers[student]}\r\n                                        correct_answer= {this.correct_answer}\r\n                                    />\r\n            console.log(student_component);\r\n            result.push(student_component);\r\n        };\r\n        \r\n        return result;\r\n    }\r\n    add_info(name, answers){\r\n        let answer_so_far = this.state.answers;\r\n        answer_so_far[name] = answers;\r\n        this.setState({\r\n            answers: answer_so_far,\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.generate_students()}\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raul-\\\\MIT\\\\contest_checker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nlet name = \"Raul Alcantara\";\nlet answers = [\"A\", \"B\", \"C\", \"B\", \"A\"];\nlet correct_answer = [\"A\", \"C\", \"B\", \"B\", \"D\"];\nlet correct_answer_score = 10;\nlet incorrect_answer_score = -2;\nlet blank_answer_score = 0;\nexport default function Index() {\n  function get_scores(answers) {\n    let result = [];\n\n    for (let i = 0; i < answers.length; i++) {\n      result.push(__jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Answer for problem \", i + 1, \" was \", answers[i]));\n    }\n\n    return result;\n  }\n\n  function get_question_score(answer, correct_answer) {\n    if (answer == correct_answer) {\n      return correct_answer_score;\n    } else if (answer == \"\") {\n      return blank_answer_score;\n    } else {\n      return incorrect_answer_score;\n    }\n  }\n\n  function get_total_score(answers) {\n    let score = 0;\n\n    for (let i = 0; i < answers.length; i++) {\n      let add_score = get_question_score(answers[i]);\n      score += add_score;\n    }\n\n    return score;\n  }\n\n  return __jsx(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Name is \", name), get_scores(answers));\n}","map":{"version":3,"sources":["C:/Users/raul-/MIT/contest_checker/pages/index.js"],"names":["name","answers","correct_answer","correct_answer_score","incorrect_answer_score","blank_answer_score","Index","get_scores","result","i","length","push","get_question_score","answer","get_total_score","score","add_score"],"mappings":";;;AAAA,IAAIA,IAAI,GAAG,gBAAX;AACA,IAAIC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAd;AACA,IAAIC,cAAc,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAArB;AACA,IAAIC,oBAAoB,GAAG,EAA3B;AACA,IAAIC,sBAAsB,GAAG,CAAC,CAA9B;AACA,IAAIC,kBAAkB,GAAG,CAAzB;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,WAASC,UAAT,CAAoBN,OAApB,EAA4B;AACxB,QAAIO,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAER,OAAO,CAACS,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnCD,MAAAA,MAAM,CAACG,IAAP,CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBF,CAAC,GAAC,CAA1B,WAAkCR,OAAO,CAACQ,CAAD,CAAzC,CAAZ;AACH;;AACD,WAAOD,MAAP;AACH;;AACD,WAASI,kBAAT,CAA4BC,MAA5B,EAAoCX,cAApC,EAAmD;AAC/C,QAAIW,MAAM,IAAIX,cAAd,EAA6B;AAEzB,aAAOC,oBAAP;AAEH,KAJD,MAIQ,IAAIU,MAAM,IAAI,EAAd,EAAiB;AAErB,aAAOR,kBAAP;AAEH,KAJO,MAID;AAEH,aAAOD,sBAAP;AACH;AACJ;;AACD,WAASU,eAAT,CAAyBb,OAAzB,EAAiC;AAC7B,QAAIc,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACS,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,UAAIO,SAAS,GAAGJ,kBAAkB,CAACX,OAAO,CAACQ,CAAD,CAAR,CAAlC;AACAM,MAAAA,KAAK,IAAIC,SAAT;AACH;;AACD,WAAOD,KAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaf,IAAb,CADJ,EAEKO,UAAU,CAACN,OAAD,CAFf,CADJ;AAOH","sourcesContent":["let name = \"Raul Alcantara\";\r\nlet answers = [\"A\", \"B\", \"C\", \"B\", \"A\"];\r\nlet correct_answer = [\"A\", \"C\", \"B\", \"B\", \"D\"];\r\nlet correct_answer_score = 10;\r\nlet incorrect_answer_score = -2;\r\nlet blank_answer_score = 0;\r\n\r\nexport default function Index(){\r\n    function get_scores(answers){\r\n        let result = []\r\n        for (let i = 0; i< answers.length; i++){\r\n            result.push(<li>Answer for problem {i+1} was {answers[i]}</li>);\r\n        }\r\n        return result;\r\n    }\r\n    function get_question_score(answer, correct_answer){\r\n        if (answer == correct_answer){\r\n\r\n            return correct_answer_score;\r\n\r\n        } else  if (answer == \"\"){\r\n\r\n            return blank_answer_score;\r\n\r\n        } else {\r\n\r\n            return incorrect_answer_score;\r\n        }\r\n    }\r\n    function get_total_score(answers){\r\n        let score = 0;\r\n        for (let i = 0; i < answers.length; i++){\r\n            let add_score = get_question_score(answers[i]);\r\n            score += add_score;\r\n        }\r\n        return score\r\n    }\r\n    return(\r\n        <ol>\r\n            <li>Name is {name}</li>\r\n            {get_scores(answers)}\r\n            \r\n        </ol>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
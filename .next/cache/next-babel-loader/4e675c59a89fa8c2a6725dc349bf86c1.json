{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raul-\\\\MIT\\\\contest_checker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nlet name = \"Raul Alcantara\";\nlet answers = [\"A\", \"B\", \"C\", \"B\", \"A\"];\nlet correctAnswer = [\"A\", \"C\", \"B\", \"B\", \"D\"];\nexport default function Index() {\n  function get_scores(answers) {\n    result = [];\n\n    for (i = 0; i < answers.length(); i++) {\n      result.push(__jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"Answer for problem \", i + 1, \" was \", answers[i]));\n    }\n\n    return result;\n  }\n\n  return __jsx(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name is \", name), get_scores(answers));\n}","map":{"version":3,"sources":["C:/Users/raul-/MIT/contest_checker/pages/index.js"],"names":["name","answers","correctAnswer","Index","get_scores","result","i","length","push"],"mappings":";;;AAAA,IAAIA,IAAI,GAAG,gBAAX;AACA,IAAIC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAd;AACA,IAAIC,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAApB;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,WAASC,UAAT,CAAoBH,OAApB,EAA4B;AACxBI,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAEL,OAAO,CAACM,MAAR,EAAf,EAAiCD,CAAC,EAAlC,EAAqC;AACjCD,MAAAA,MAAM,CAACG,IAAP,CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBF,CAAC,GAAC,CAA1B,WAAkCL,OAAO,CAACK,CAAD,CAAzC,CAAZ;AACH;;AACD,WAAOD,MAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaL,IAAb,CADJ,EAEKI,UAAU,CAACH,OAAD,CAFf,CADJ;AAOH","sourcesContent":["let name = \"Raul Alcantara\";\r\nlet answers = [\"A\", \"B\", \"C\", \"B\", \"A\"];\r\nlet correctAnswer = [\"A\", \"C\", \"B\", \"B\", \"D\"];\r\n\r\nexport default function Index(){\r\n    function get_scores(answers){\r\n        result = []\r\n        for (i = 0; i< answers.length(); i++){\r\n            result.push(<li>Answer for problem {i+1} was {answers[i]}</li>);\r\n        }\r\n        return result;\r\n    }\r\n    return(\r\n        <ol>\r\n            <li>Name is {name}</li>\r\n            {get_scores(answers)}\r\n            \r\n        </ol>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}